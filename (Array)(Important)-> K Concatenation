class Solution {
      public static int mod = (int)(Math.pow(10, 9) + 7);   
    public int kConcatenationMaxSum(int[] arr, int k) {
        
		
        if(k==1)
            return (int)(kadane(arr)%mod);
        
        long sum=0;
        for(int i=0;i<arr.length;i++)
            sum+=arr[i];
        
        int[] narr = new int[arr.length*2];
        
        for(int i=0;i<arr.length;i++){
            narr[i]=arr[i];
            narr[i+arr.length] = arr[i];
        }
        
        if(sum<0){
            long kadaneTwo = kadane(narr);
            return (int)(kadaneTwo%mod);
        }
        
        //sum>=0
        long kadaneTwo = kadane(narr) + (k-2)*sum;
        return (int)(kadaneTwo%mod);
      
    }
    
    public long kadane(int[] arr){
        
        long currMax=0,max = 0;
        
        for(int i=0;i<arr.length;i++){
            currMax = Math.max(currMax+arr[i],arr[i]);
            max = Math.max(currMax,max);
        }
        
        return max;
    }
}
