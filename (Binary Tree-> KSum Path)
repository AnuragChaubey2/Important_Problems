import java.util.ArrayList;

public class KsumPath {
        public static void main(String[] args){
            Node root = new Node(1);
            root.left = new Node(3);
            root.left.left = new Node(2);
            root.left.right = new Node(1);
            root.left.right.left = new Node(1);
            root.right = new Node(-1);
            root.right.left = new Node(4);
            root.right.left.left = new Node(1);
            root.right.left.right = new Node(2);
            root.right.right = new Node(5);
            root.right.right.right = new Node(2);
            int k=5;
          PrintKthPaths(root, k); 
        }  
        Node root;
        //Amazon...
        static ArrayList<Integer> al=new ArrayList<>();
      public static void PrintKthPaths(Node root,int k){
          //find all the paths from leaf to root
          if(root==null){
              return;
          }
          al.add(root.data);
          //the recusivly call for left and right
          PrintKthPaths(root.left, k);
          PrintKthPaths(root.right, k);
          int ans=0;
          for(int i=al.size()-1;i>=0;i--){
            ans+=al.get(i);
            if(ans==k){
                PrintKthPaths(root, k);
            }
            //otherwise remove that path
            al.remove(al.size()-1);
                  }

      }
    }
class Node{
    int data;
   Node left,right;
    Node(int data){
        this.data=data;
        left=right=null;
    }
}
