import java.util.LinkedList;
import java.util.Queue;

public class DeepestLevel {
    Node2 root;
    public int findDeepest(Node2 root){
        //Iterative Method to find the sum\
        Queue<Node2> q=new LinkedList<>();
        q.add(root);
        int sum=0;
        while(!q.isEmpty()){
            //find the sum of each level..until we get to the last and then return the sum
            sum=0;
            int len=q.size();
            for(int i=0;i<len;i++){
                Node2 sumToBeAdded=q.poll();
                sum+=sumToBeAdded.data;  
                if(root.left!=null){
                    q.add(root.left);
                }
                else{
                    q.add(root.right);
                }

            }
        }
        return sum;
    }
}
class Node2{
int data;
Node2 left;
Node2 right;
Node2(int data){
    this.data=data;
    left=right=null;
}

}
