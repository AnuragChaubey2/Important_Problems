class Solution {
    public int minFallingPathSum(int[][] matrix) {
        
        int m = matrix.length;
        int n = matrix[0].length;
        int dp[][] = new int[m][n];
        int res = Integer.MAX_VALUE;
        
        for(int i = m-1;i>=0;i--){
            for(int j = 0;j< n;j++){
                if(i == m-1){
                    dp[i][j]=matrix[i][j];
                }else{
                    int temp = matrix[i][j];
                    if(j == 0){
                        temp += Math.min(dp[i+1][j],dp[i+1][j+1]);
                    }else if(j == n-1){
                        temp += Math.min(dp[i+1][j],dp[i+1][j-1]);
                    }else{
                        temp += Math.min(dp[i+1][j-1],Math.min(dp[i+1][j],dp[i+1][j+1]));
                    }
                    dp[i][j] = temp;
                }
            }
        }
        
        for(int i : dp[0]){
            res = Math.min(res,i);
        }
        
        return res;
    }
}
