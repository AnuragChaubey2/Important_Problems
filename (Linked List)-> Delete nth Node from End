/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode current = head;
        ListNode prev = null;
        ListNode ptr = head;
        for(int i=0; i<n; i++) {
            ptr = ptr.next;
        }
        
        while(ptr != null) {  //need of three pointer....when ptr reaches to the end of linked list
//curr nth element ke barabar rhega....so, just make the prev.next=curr.next to preserve the rest of nodes, 4 ko chor ke baari sab print ho jayengey
            ptr = ptr.next;
            prev = current;
            current = current.next;             
        }
        if(prev != null) {
            prev.next = current.next;
        } else {
            head = current.next;
        }
        return head;
    }
}
