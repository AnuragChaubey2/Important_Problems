class Solution {
public int orangesRotting(int[][] grid) {
      int n=grid.length;
      int m=grid[0].length;
      int num=2;
      boolean flag=false;
      while(true){
      for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
      if(grid[i][j]==num){

             if(safe(i+1,j,n,m)&&grid[i+1][j]==1){
                 grid[i+1][j]=grid[i][j]+1;
                 flag=true;
             }
             if(safe(i,j+1,n,m)&&grid[i][j+1]==1){
                 grid[i][j+1]=grid[i][j]+1;
                 flag=true;
             }
             if(safe(i-1,j,n,m)&&grid[i-1][j]==1){
                 grid[i-1][j]=grid[i][j]+1;
                 flag=true;
             }
             if(safe(i,j-1,n,m)&&grid[i][j-1]==1){
                 grid[i][j-1]=grid[i][j]+1;;
                 flag=true;
             } 
           }
        }
    }
    if(flag==false){
     break;   
    }
    flag=false;
    num++;
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j]==1){
                return -1;
            }
        }
    }
    return num-2;
}
public boolean safe(int i,int j,int n,int m){
    if(i>=0&&j>=0&&i<n&&j<m){
        return true;
    }
    return false;
}
}
