class Solution {
public int rob(int[] nums) {
if(nums.length==1)
{
return nums[0];
}
if(nums.length == 2)
{
return (int) Math.max(nums[0],nums[1]);
}
return Math.max(robber(nums,0,nums.length-2, new Integer[nums.length]),robber(nums,1,nums.length-1,new Integer[nums.length]));

}
public int robber(int[] nums,int i, int j, Integer[] dp)
{
    if(i>j)
    {
        return 0;
    }
    if(dp[i]!=null)
    {
        return dp[i];
    }
    int s1 = 0+robber(nums,i+1,j,dp);
    int s2 = nums[i]+robber(nums,i+2,j,dp);
    
    dp[i] = Math.max(s1,s2);
    return dp[i];
}
}
